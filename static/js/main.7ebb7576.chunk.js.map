{"version":3,"sources":["logo.svg","StateProvider.js","Components/Functions.js","Components/Realtime.js","Components/firebase.js","Components/FormDialog.js","Components/BuySell.js","App.js","reportWebVitals.js","reducer.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","strimstring","stringitem","length","temp","parseInt","toLocaleString","style","currency","substring","getCurrentDate","newDate","Date","getDate","getMonth","getFullYear","Realtime","socket","arr","socketLink","useState","newstockvalue","setnewstockvalue","StockItems","setStockItems","VNIndex","setVNIndex","dispatch","currentstockprice","Stocklist","InitStockItems","setInitStockItems","IsConnected","setIsConnected","getVNindex","require","request","method","url","error","response","body","Error","tempindex","undefined","idx","JSON","parse","cIndex","idxchg","ot","split","idxpct","tval","tvol","vol","a","options","join","socketConnect","msg","emit","on","zdata","item","id","newStockItems","indexnum","indexOf","sym","tempstock","side","g1","g2","g3","g4","g5","g6","updatestock","data","date","hours","getHours","minutes","getMinutes","seconds","getSeconds","stringify","type","lastPrice","console","log","lastVolume","lastVol","change","changePc","lot","totalVol","highPrice","hp","lowPrice","lp","updatestockmatch","useEffect","initstockitems","io","connectioncircleID","document","querySelector","backgroundColor","timeout","setTimeout","clearTimeout","removeAllListeners","initWebsocket","map","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","className","color","parseFloat","index","r","toString","borderTopWidth","borderTopColor","borderTopStyle","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","StockRef","collection","FormDialog","props","React","open","setOpen","handleClose","Soldstock","getElementById","isNaN","where","stockitem","MaCK","Amount","BoughtPrice","onSnapshot","snapshot","docs","doc","stockSoldPrice","gain","gainpercent","StockQueries","get","then","exists","update","SoldPrice","DaySold","MonthSold","YearSold","IsSold","Gain","Percent","catch","UpdateStockByID","ExpectedInterest","buyprice","sellprice","expectedprofit","toFixed","Button","variant","fontSize","size","onClick","Dialog","onClose","aria-labelledby","disableBackdropClick","DialogTitle","DialogContent","TextField","autoFocus","margin","label","fullWidth","DialogActions","BuySell","stocks","setStocks","buystocks","setBuyStocks","sellstocks","setSellStocks","showbought","setshowbought","orderBy","filter","sort","b","localeCompare","soldTotal","reduce","prev","cur","expectTotal","findIndex","CRItem","BuyTotal","ShowBuyStock","items","marginTop","placeholder","onChange","e","target","toUpperCase","preventDefault","add","DayBought","MonthBought","YearBought","FormControlLabel","control","Switch","checked","inputProps","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","currentstockpriceItem","newcurrentstockprice","ReactDOM","render","StrictMode","basket","user"],"mappings":"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","file":"static/js/main.7ebb7576.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { createContext, useContext, useReducer } from \"react\";\n\n// Prepares the dataLayer\nexport const StateContext = createContext();\n\n// Wrap our app and provide the Data layer\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\n// Pull information from the data layer\nexport const useStateValue = () => useContext(StateContext);\n","export function strimstring(stringitem) {\n  if (stringitem.length > 2) {\n    let temp = (parseInt(stringitem) * 10).toLocaleString(\"en-US\", {\n      style: \"decimal\",\n      currency: \"USD\",\n    });\n    // console.log(temp);\n    temp = temp.substring(0, temp.length - 1);\n    return temp;\n  } else {\n    return stringitem;\n  }\n}\n\nexport function getCurrentDate() {\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n\n  return [date, month, year];\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Realtime.css\";\nimport io from \"socket.io-client\";\nimport { useStateValue } from \"../StateProvider\";\nimport { strimstring } from \"./Functions\";\n//index link: https://bgapidatafeed.vps.com.vn/getlistindexdetail/10\n\nfunction Realtime() {\n  let socketLink = \"https://bgdatafeed.vps.com.vn/\";\n  const [newstockvalue, setnewstockvalue] = useState(\"Begin\");\n  const [StockItems, setStockItems] = useState([]);\n  const [VNIndex, setVNIndex] = useState([]);\n  // const [WebSocketInitState, setWebSocketInitState] = useState(false);\n  const [{ currentstockprice }, dispatch] = useStateValue();\n  var Stocklist = [\"TCM\", \"HPG\", \"VGT\", \"GIL\", \"DXG\"];\n  const [InitStockItems, setInitStockItems] = useState(false);\n  const [IsConnected, setIsConnected] = useState(false);\n  let vStockPs;\n  let socket;\n\n  // socketConnect();\n  useEffect(() => {\n    console.log(\"init stock items\");\n    initstockitems();\n    getVNindex();\n    // initWebsocket();\n    // socketConnect();\n  }, []);\n  useEffect(() => {\n    // initstockitems();\n    if (InitStockItems === true) {\n      initWebsocket();\n      socketConnect();\n    }\n  }, [InitStockItems]);\n\n  //sau khi có du lieu thi update thong tin gia ban\n  useEffect(() => {\n    // console.log(StockItems);\n    StockItems.map((item) =>\n      dispatch({\n        type: \"UPDATE_TO_CURRENTSTOCKPRICE\",\n        item: {\n          sym: item.sym,\n          lastPrice: item.lastPrice,\n        },\n      })\n    );\n  }, [InitStockItems]);\n  // console.log(\"star dispach\", currentstockprice);\n\n  useInterval(() => {\n    // Your custom logic here\n    getVNindex();\n    console.log(\"index update\", Date());\n  }, 60000);\n\n  //thiet lap vong lap lay du lieu\n  function useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest function.\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }\n  function getVNindex() {\n    const request = require(\"request\");\n    const options = {\n      method: \"GET\",\n      url: \"https://bgapidatafeed.vps.com.vn/getlistindexdetail/10\",\n    };\n    request(options, function (error, response, body) {\n      if (error) throw new Error(error);\n      // console.log(body.id);\n      // JSON.parse(body).content.forEach((indexcontent) => {\n      //   if (indexcontent.brd === \"HOSE\") {\n      let tempindex = { ...VNIndex };\n      if (body !== undefined) {\n        tempindex.idx = JSON.parse(body)[0].cIndex;\n        tempindex.idxchg = JSON.parse(body)[0].ot.split(\"|\")[0];\n        tempindex.idxpct = JSON.parse(body)[0].ot.split(\"|\")[1];\n        // tempindex.ttrd = indexcontent.ttrd;\n        tempindex.tval = JSON.parse(body)[0].ot.split(\"|\")[2];\n        tempindex.tvol = JSON.parse(body)[0].vol;\n        setVNIndex(tempindex);\n      }\n    });\n  }\n  async function initstockitems() {\n    const request = require(\"request\");\n    const options = {\n      method: \"GET\",\n      // url: \"https://bgapidatafeed.vps.com.vn/getliststockdata/VGT,TCM,DXG\",\n      url:\n        \"https://bgapidatafeed.vps.com.vn/getliststockdata/\" +\n        Stocklist.join(\",\"),\n    };\n\n    await request(options, function (error, response, body) {\n      if (error) throw new Error(error);\n      setStockItems(JSON.parse(body));\n      setInitStockItems(true);\n      // console.log(JSON.stringify(body));\n    });\n  }\n  const StockRows = (arr) =>\n    arr &&\n    arr.map((item, index) => (\n      <div className=\"stockCard\" key={index}>\n        {/*prettier-ignore*/}\n        <div className=\"StockCard__Header\" id = {item.sym} style={{ color: item.lastPrice < item.r ? \"red\" : item.lastPrice > item.r ? \"blue\" : \"black\", }}>\n          <div>{item.sym}</div>\n          <div id = {item.sym + \"-op\"} >{item.ot}</div>\n          <div id = {item.sym + \"-lastPrice\"}>{item.lastPrice}</div>\n          <div id = {item.sym + \"-lastVolume\"}>{strimstring(item.lastVolume.toString())}</div>\n          <div id = {item.sym + \"-changePc\"}>{item.changePc}%</div>\n          <div id = {item.sym + \"-lot\"}>{strimstring(item.lot.toString())}</div>\n        </div>\n\n        <div className=\"stockCard__Buy\">\n          <div className=\"BuyAmount\">\n            <div>Amount</div> <div>Price</div>\n          </div>\n          {/*prettier-ignore*/}\n          <div className=\"BuyAmount\" id = {item.sym + \"-g1\"} style={{ color: (item.g1.split(\"|\")[0]) < (item.r) ? \"red\" : (item.g1.split(\"|\")[0]) > (item.r) ? \"blue\" : \"black\", }}>\n            <div>{strimstring(item.g1.split(\"|\")[1])}</div>\n            <div >{item.g1.split(\"|\")[0]}</div>\n          </div>\n          {/*prettier-ignore*/}\n          <div className=\"BuyAmount\" id = {item.sym + \"-g2\"} style={{ color: parseFloat(item.g2.split(\"|\")[0]) < parseFloat(item.r) ? \"red\" : parseFloat(item.g2.split(\"|\")[0]) > parseFloat(item.r) ? \"blue\" : \"black\", }}>\n            <div>{strimstring(item.g2.split(\"|\")[1])}</div>\n            <div>{item.g2.split(\"|\")[0]}</div>\n          </div>\n          {/*prettier-ignore*/}\n          <div className=\"BuyAmount\" id = {item.sym + \"-g3\"} style={{ color: parseFloat(item.g3.split(\"|\")[0]) < parseFloat(item.r) ? \"red\" : parseFloat(item.g3.split(\"|\")[0]) > parseFloat(item.r) ? \"blue\" : \"black\", }}>\n            <div>{strimstring(item.g3.split(\"|\")[1])}</div>\n            <div >{item.g3.split(\"|\")[0]}</div>\n          </div>\n          {/*prettier-ignore*/}\n          <div className=\"BuyAmount\" style={{ color: item.lowPrice < item.r ? \"red\" : \"blue\", borderTopWidth: 1, borderTopColor: \"#A9A9A9\",borderTopStyle: \"solid\",}}>\n            <div>Min</div> <div>{item.lowPrice}</div>\n          </div>\n        </div>\n        <div className=\"stockCard__Sell\">\n          <div className=\"BuyAmount\">\n            <div>Amount</div> <div>Price</div>\n          </div>\n          {/*prettier-ignore*/}\n          <div className=\"SellAmount\" id = {item.sym + \"-g4\"} style={{ color: parseFloat(item.g4.split(\"|\")[0]) < parseFloat(item.r) ? \"red\" : parseFloat(item.g4.split(\"|\")[0]) > parseFloat(item.r) ? \"blue\" : \"black\", }}>\n            <div>{strimstring(item.g4.split(\"|\")[1])}</div>\n            <div >{item.g4.split(\"|\")[0]}</div>\n          </div>\n          {/*prettier-ignore*/}\n          <div className=\"SellAmount\" id = {item.sym + \"-g5\"} style={{ color: (item.g5.split(\"|\")[0]) < (item.r) ? \"red\" : (item.g5.split(\"|\")[0]) > (item.r) ? \"blue\" : \"black\", }}>\n            <div>{strimstring(item.g5.split(\"|\")[1])}</div>\n            <div >{item.g5.split(\"|\")[0]}</div>\n          </div>\n          {/*prettier-ignore*/}\n          <div className=\"SellAmount\" id = {item.sym + \"-g6\"} style={{ color: (item.g6.split(\"|\")[0]) < (item.r) ? \"red\" : (item.g6.split(\"|\")[0]) > (item.r) ? \"blue\" : \"black\", }}>\n            <div>{strimstring(item.g6.split(\"|\")[1])}</div>\n            <div >{item.g6.split(\"|\")[0]}</div>\n          </div>\n          {/*prettier-ignore*/}\n          <div\n            className=\"BuyAmount\"\n            style={{\n              color: item.highPrice < item.r ? \"red\" : \"blue\",\n              borderTopWidth: 1,\n              borderTopColor: \"#A9A9A9\",\n              borderTopStyle: \"solid\",\n            }}\n          >\n            <div>Max</div> <div>{item.highPrice}</div>\n          </div>\n        </div>\n      </div>\n    ));\n\n  function initWebsocket() {\n    if (socket == null || typeof socket === \"undefined\") {\n      socket = io(socketLink);\n      console.log(\"initial websocket\");\n      socket.on(\"connect\", function (data) {\n        console.log(\"CONNECT\");\n        setIsConnected(true);\n        const connectioncircleID = document.querySelector(\"#connectioncircle\");\n        console.log(connectioncircleID);\n        connectioncircleID.style.backgroundColor = \"blue\";\n        // connectioncircleID.classList.replace(\"notconnected\", \"connected\");\n        const timeout = setTimeout(() => {\n          setIsConnected(false);\n        }, 3000);\n        return () => clearTimeout(timeout);\n        // socket.emit(\"regs\", msg);\n        // console.log(data);\n        // this.('#status-connect').text('Connected').css('color', '#50C979');\n      });\n    } else {\n      if (Stocklist != null && typeof Stocklist !== \"undefined\") {\n        // đăng ký lại room\n        let msg = '{\"action\":\"leave\",\"list\":\"' + Stocklist.join(\",\") + '\"}';\n        socket.emit(\"regs\", msg);\n      }\n    }\n\n    socket.on(\"disconnect\", () => {\n      socket.removeAllListeners();\n      setIsConnected(false);\n      const connectioncircleID = document.querySelector(\"#connectioncircle\");\n      // console.log(connectioncircleID);\n      connectioncircleID.style.backgroundColor = \"gray\";\n      // $('#status-connect').text('Disconnect').css('color', '#DA5664');\n    });\n    socket.on(\"connect_error\", () => {\n      // $('#status-connect').text('Disconnect').css('color', '#DA5664');\n    });\n    socket.on(\"reconnect_error\", () => {\n      // $('#status-connect').text('Disconnect').css('color', '#DA5664');\n    });\n\n    socket.on(\"reconnect\", () => {\n      socketConnect();\n      // $('#status-connect').text('Connected').css('color', '#50C979');\n    });\n\n    //socketConnect();\n  }\n\n  function socketConnect() {\n    // var dmck = $.jStorage.get(\"DANH-MUC-CHUNG-KHOAN\", []);\n    // var stockHandle = _.find(dmck, function (o) { return o.active == true });\n    // if (!stockHandle) {\n    //     return;\n    // }\n    // var msg = \"{\\\"action\\\":\\\"join\\\",\\\"list\\\":\\\"\"+ \"TCM\" +\"\\\"}\";\n    let msg = '{\"action\":\"join\",\"list\":\"' + Stocklist.join(\",\") + '\"}';\n    // console.log(msg);\n    socket.emit(\"regs\", msg);\n\n    socket.on(\"board\", function (zdata) {\n      // sendQueue(zdata.data);\n      // console.log(\"board:\", zdata.data);\n      //Cap nhat thong tin bang gia\n      // 42[\"board\",{\"data\":{\"id\":3210,\"sym\":\"REE\",\"side\":\"S\",\"g1\":\"34.90|314|i\",\"g2\":\"35.00|1|i\",\"g3\":\"35.10|259|i\",\"vol4\":0}}]\n      //42[\"board\",{\"data\":{\"id\":3310,\"sym\":\"VCG\",\"BVolume\":43820,\"SVolume\":28860,\"Total\":13770,\"AvePrice\":17.2,\"APColor\":\"e\"}}]\n      updatestock(zdata.data);\n    });\n\n    socket.on(\"index\", function (zdata) {\n      // console.log(zdata.data);\n    });\n    //Nếu khớp lệnh trả về thông tin khớp, chỉ trả về thông tin mã khớp\n    socket.on(\"stock\", function (zdata) {\n      //{\"id\":3220,\"sym\":\"TCB\",\"lastPrice\":25.3,\"lastVol\":100,\"cl\":\"i\",\"change\":\"0.50\",\"changePc\":\"2.02\",\"totalVol\":108810,\"time\":\"10:49:56\",\"hp\":25.3,\"ch\":\"i\",\"lp\":24.9,\"lc\":\"i\",\"ap\":25.1,\"ca\":\"i\"}\n      updatestockmatch(zdata.data);\n    });\n  }\n\n  //Cap nhat thong tin ve bang gia, neu ben ban thi la S, mua la B\n  function updatestock(item) {\n    // console.log(\"Board\", item);\n    if (InitStockItems === true && item.id === 3210) {\n      let newStockItems = StockItems;\n      let indexnum = Stocklist.indexOf(item.sym);\n      let tempstock = { ...StockItems[indexnum] };\n      if (item.side === \"B\") {\n        tempstock.g1 = item.g1;\n        tempstock.g2 = item.g2;\n        tempstock.g3 = item.g3;\n      } else {\n        tempstock.g4 = item.g1;\n        tempstock.g5 = item.g2;\n        tempstock.g6 = item.g3;\n      }\n\n      // console.log(\"Temp: \", tempstock);\n      // StockItems[indexnum].lastPrice = item.lastPrice;\n      newStockItems[indexnum] = tempstock;\n      setStockItems([...newStockItems]);\n      // console.log(item);\n    }\n  }\n\n  //Cap nhat thong tin ve khop lenh\n  function updatestockmatch(item) {\n    if (InitStockItems === true) {\n      let date = new Date();\n      let hours = date.getHours();\n      let minutes = date.getMinutes();\n      let seconds = date.getSeconds();\n      let newStockItems = StockItems;\n      let indexnum = Stocklist.indexOf(item.sym);\n      // prettier-ignore\n      setnewstockvalue(hours + \":\" + minutes + \":\" + seconds + \": \" + JSON.stringify(item) );\n      //update thông tin giá các mã đã mua\n      dispatch({\n        type: \"UPDATE_TO_CURRENTSTOCKPRICE\",\n        item: {\n          sym: item.sym,\n          lastPrice: item.lastPrice,\n        },\n      });\n      //uddate thong tin ck\n      console.log(item);\n      let tempstock = { ...StockItems[indexnum] };\n      tempstock.lastPrice = item.lastPrice;\n      tempstock.lastVolume = item.lastVol;\n      tempstock.change = item.change;\n      tempstock.changePc = item.changePc;\n      tempstock.lot = item.totalVol;\n      tempstock.highPrice = item.hp;\n      tempstock.lowPrice = item.lp;\n\n      // console.log(\"Temp: \", tempstock);\n      // StockItems[indexnum].lastPrice = item.lastPrice;\n      newStockItems[indexnum] = tempstock;\n      setStockItems([...newStockItems]);\n      // console.log(indexnum);\n      var dnow = new Date();\n      // console.log(\"stock\", item.timeServer + \"ToT\" + dnow.getTime());\n    }\n  }\n\n  return (\n    <div>\n      {/* kiem tra co du lieu moi xuat ko bi loi */}\n      {/*prettier-ignore*/}\n      <div className=\"VNIndexContent\" style={{ color: VNIndex.idxchg < 0 ? \"red\" : \"blue\", }} >\n        {/*prettier-ignore*/}\n        <div className=\"VnIndex\"> {VNIndex.idx !== undefined ? parseFloat(VNIndex.idx).toLocaleString(\"en-US\", { style: \"decimal\", currency: \"USD\", }) : \"0\"} </div>\n        {/*prettier-ignore*/}\n        <div className=\"VnIndex\">      {VNIndex.idxchg !== undefined ? VNIndex.idxchg : \"0\"}   </div>\n        {/*prettier-ignore*/}\n        <div className=\"VnIndex\">{VNIndex.tval !== undefined ? parseInt(VNIndex.tval).toLocaleString(\"en-US\", {style: \"decimal\",currency: \"USD\",}) : \"0\"} </div>\n        {/*prettier-ignore*/}\n       <div> <a className=\"connection-circle notconnected\" id=\"connectioncircle\"></a> </div>\n      </div>\n\n      <div className=\"realtime\">{StockRows(StockItems)}</div>\n      <div className=\"jsonValue\">{newstockvalue}</div>\n      {/*prettier-ignore*/}\n      <div  className= {IsConnected ? \"alert alert-success connection-alert connected-alert text-center fadeIn\":  \"fadeOut\"}>\n        <strong>Connected!</strong>\n      </div>\n    </div>\n  );\n}\n\nexport default Realtime;\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport firebase from \"firebase\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDl0oKQRCOHexa-EloSX_pJFN-lkSqibtc\",\n  authDomain: \"stockrealtime-5c049.firebaseapp.com\",\n  databaseURL: \"https://stockrealtime-5c049.firebaseio.com\",\n  projectId: \"stockrealtime-5c049\",\n  storageBucket: \"stockrealtime-5c049.appspot.com\",\n  messagingSenderId: \"144010414262\",\n  appId: \"1:144010414262:web:322dbb3aa4889756587e17\",\n  measurementId: \"G-J2YJH55K7K\",\n};\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\n// const StockRef = db.collection(\"Stocks\");\n\nexport const StockRef = db.collection(\"Stocks\");\nexport default db;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { StockRef } from \"./firebase\";\nimport { getCurrentDate } from \"./Functions\";\n\nexport default function FormDialog(props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  function UpdateStockByID(id, stockSoldPrice, gain, gainpercent) {\n    let StockQueries = StockRef.doc(id);\n    // console.log(getCurrentDate()[0]);\n    StockQueries.get()\n      .then(function (doc) {\n        if (doc.exists) {\n          // console.log(\"Document data:\", doc.data());\n          // console.log(gain, gainpercent);\n          StockQueries.update({\n            SoldPrice: stockSoldPrice,\n            DaySold: getCurrentDate()[0],\n            MonthSold: getCurrentDate()[1],\n            YearSold: getCurrentDate()[2],\n            IsSold: true,\n            Gain: gain,\n            Percent: gainpercent,\n          });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      })\n      .catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n    let Soldstock = parseFloat(document.getElementById(\"StockID\").value);\n    // console.log(Soldstock);\n    // If value entered was valid\n    if (!isNaN(Soldstock)) {\n      // first : get ID of stock data\n      let StockQueries = StockRef.where(\"MaCK\", \"==\", props.stockitem.MaCK)\n        .where(\"IsSold\", \"==\", false)\n        .where(\"Amount\", \"==\", props.stockitem.Amount)\n        .where(\"BoughtPrice\", \"==\", props.stockitem.BoughtPrice);\n      //   console.log(StockQueries.get);\n      StockQueries.onSnapshot((snapshot) => {\n        snapshot.docs.map((doc) => {\n          UpdateStockByID(\n            doc.id,\n            Soldstock,\n            ExpectedInterest(\n              props.stockitem.BoughtPrice,\n              Soldstock,\n              props.stockitem.Amount\n            )[0],\n            ExpectedInterest(\n              props.stockitem.BoughtPrice,\n              Soldstock,\n              props.stockitem.Amount\n            )[1]\n          );\n          // console.log(doc.id);\n        });\n      });\n    }\n  };\n\n  function ExpectedInterest(buyprice, sellprice, Amount) {\n    let expectedprofit =\n      (parseFloat(sellprice) * 1000 - parseFloat(buyprice) * 1000) * Amount -\n      (parseFloat(buyprice) + parseFloat(sellprice)) * Amount * 2 -\n      parseFloat(sellprice) * Amount;\n\n    let expectedpercent =\n      (expectedprofit / (parseFloat(buyprice) * 10 * Amount)).toFixed(2) + \"%\";\n    return [expectedprofit, expectedpercent];\n  }\n  return (\n    <div>\n      <Button\n        variant=\"outlined\"\n        style={{ fontSize: \"12px\" }}\n        size=\"small\"\n        onClick={handleClickOpen}\n      >\n        Sell\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        // onEntering={handleEnter}\n        aria-labelledby=\"form-dialog-title\"\n        disableBackdropClick={true}\n      >\n        <DialogTitle id=\"form-dialog-title\">Sell Price</DialogTitle>\n        <DialogContent>\n          <TextField\n            id={\"StockID\"}\n            autoFocus\n            margin=\"dense\"\n            // id=\"sellprice\"\n            label=\"Sell Price\"\n            type=\"email\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./BuySell.css\";\nimport \"./firebase\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport db from \"./firebase\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { useStateValue } from \"../StateProvider\";\nimport { getCurrentDate } from \"./Functions\";\n// import { ExpectedInterest } from \"./TransactionItem\";\nimport FormDialog from \"./FormDialog\";\n\n//import db from \"../firebase.js\";\n//twitter 2:36:00\n\nfunction BuySell() {\n  const [stocks, setStocks] = useState([]);\n  const [buystocks, setBuyStocks] = useState([]);\n  const [sellstocks, setSellStocks] = useState([]);\n  const [showbought, setshowbought] = useState(false);\n  // const [ExpectProfit, setExpectProfit] = useState(0);\n  // var ExpectProfit = 0;\n  const [{ currentstockprice }, dispatch] = useStateValue();\n  // const [soldTotal, setsoldTotal] = useState(0);\n  // var stockrecentbuy = {\n  //   MaCK: \"\",\n  //   SoldPrice: 0,\n  //   BoughtPrice: 0,\n  //   Amount: 0,\n  //   Gain: 0,\n  //   Percent: 0,\n  //   IsSold: false,\n  // };\n\n  // console.log(stockrecentbuy);\n  // console.log(\"current price :\", currentstockprice);\n  useEffect(() => {\n    db.collection(\"Stocks\")\n      .orderBy(\"MaCK\")\n      .onSnapshot((snapshot) => {\n        setStocks(snapshot.docs.map((doc) => doc.data()));\n      });\n\n    // let data = [ { id: 1, name: 'Mike', city: 'philps', state:'New York'}, { id: 2, name: 'Steve', city: 'Square', state: 'Chicago'}, { id: 3, name: 'Jhon', city: 'market', state: 'New York'}, { id: 4, name: 'philps', city: 'booket', state: 'Texas'}, { id: 5, name: 'smith', city: 'brookfield', state: 'Florida'}, { id: 6, name: 'Broom', city: 'old street', state: 'Florida'}, ]\n    // data = data.filter((item) => item.state == 'New York').map(({id, name, city}) => ({id, name, city}));\n    // console.log(data);\n  }, []);\n\n  useEffect(() => {\n    // prettier-ignore\n    let data = stocks\n      ?.filter((item) => item.IsSold === false)\n      .map(({MaCK,SoldPrice,BoughtPrice,Amount,Gain,Percent,IsSold,}) =>\n      ({MaCK,SoldPrice,BoughtPrice,Amount,Gain,Percent,IsSold,})\n      );\n    // objs.sort(function(a, b) {\n    // return a.last_nom.localeCompare(b.last_nom)\n    // });\n    setBuyStocks(\n      data.sort(function (a, b) {\n        return a.MaCK.localeCompare(b.MaCK);\n      })\n    );\n    // console.log(\"CK chua ban\", data);\n    // prettier-ignore\n    data = stocks\n      ?.filter((item) => item.IsSold === true).map(\n        ({MaCK,SoldPrice,BoughtPrice,Amount,Gain,Percent,IsSold,}) =>\n        ({MaCK,SoldPrice,BoughtPrice,Amount,Gain,Percent,IsSold,})\n      );\n    setSellStocks(data);\n    //get buy/sell total\n\n    // console.log(\"CK da ban\", data);\n  }, [stocks]);\n  //\n  // var soldTotal = sellstocks.reduce(function (prev, cur) {\n  //   return prev + cur.Gain;\n  // }, 0);\n\n  var soldTotal = sellstocks.reduce(function (prev, cur) {\n    return (\n      prev + ExpectedInterest(cur.BoughtPrice, cur.SoldPrice, cur.Amount)[0]\n    );\n  }, 0);\n\n  var expectTotal = buystocks.reduce(function (prev, cur) {\n    return (\n      prev +\n      ExpectedInterest(\n        cur.BoughtPrice,\n        currentstockprice[\n          currentstockprice.findIndex((CRItem) => CRItem.sym === cur.MaCK)\n        ]?.lastPrice,\n        cur.Amount\n      )[0]\n    );\n  }, 0);\n\n  let BuyTotal = buystocks.reduce(function (prev, cur) {\n    return prev + cur.BoughtPrice * cur.Amount * 1000;\n  }, 0);\n  // console.log(BuyTotal);\n  // console.log(soldTotal);\n  // let data = stocks\n  //   .filter((item) => item.IsSold === false)\n  //   .map(({ MaCK, SoldPrice, BoughtPrice, Amount }) => ({\n  //     MaCK,\n  //     SoldPrice,\n  //     BoughtPrice,\n  //     Amount,\n  //   }));\n  // console.log(\"CK chua ban\", data);\n  //console.log(sellstocks);\n  // End load data\n\n  const addstockclick = (e) => {\n    e.preventDefault();\n    db.collection(\"Stocks\").add({\n      MaCK: document.getElementById(\"StockCodeID\").value.toUpperCase(),\n      SoldPrice: 0,\n      BoughtPrice: parseFloat(document.getElementById(\"BuyPrice\").value),\n      IsSold: false,\n      Amount: parseInt(document.getElementById(\"StockAmount\").value),\n      Gain: 0,\n      Percent: 0,\n      DayBought: getCurrentDate()[0],\n      MonthBought: getCurrentDate()[1],\n      YearBought: getCurrentDate()[2],\n      DaySold: 0,\n      MonthSold: 0,\n      YearSold: 0,\n    });\n    console.log(document.getElementById(\"StockCodeID\").value);\n    console.log(document.getElementById(\"StockAmount\").value);\n    console.log(document.getElementById(\"BuyPrice\").value);\n    // console.log(stockrecentbuy);\n\n    // console.log(\"Add Stock Clicked !!!\");\n  };\n\n  function showboughtClick() {\n    showbought ? setshowbought(false) : setshowbought(true);\n    // setshowbought\n    // setChecked((prev) => !prev);\n  }\n\n  const soldstockclick = (e, mack, khoiluong, giamua) => {\n    e.preventDefault();\n    // db.collection(\"Stocks\").onSnapshot((snapshot) => {\n    //   setStocks(snapshot.docs.map((doc) => doc.data()));\n    // }\n    const cityRef = db.collection(\"Stocks\").where();\n    const doc = cityRef.get();\n    if (!doc.exists) {\n      console.log(\"No such document!\");\n    } else {\n      console.log(\"Document data:\", doc.data());\n    }\n    // console.log(db);\n  };\n  function ExpectedInterest(buyprice, sellprice, Amount) {\n    let expectedprofit =\n      (parseFloat(sellprice) * 1000 - parseFloat(buyprice) * 1000) * Amount -\n      (parseFloat(buyprice) + parseFloat(sellprice)) * Amount * 2 -\n      parseFloat(sellprice) * Amount;\n\n    let expectedpercent =\n      (expectedprofit / (parseFloat(buyprice) * 10 * Amount)).toFixed(2) + \"%\";\n    return [expectedprofit, expectedpercent];\n  }\n  // console.log(stocks);\n\n  const ShowBuyStock = (items) =>\n    items &&\n    items.map((item, index) => (\n      <div className=\"stocks\" key={index}>\n        <div className=\"mack\">{item.MaCK}</div>\n        <div className=\"buyprice\">{item.BoughtPrice}</div>\n        <div className=\"sell\">\n          {item.IsSold\n            ? item.SoldPrice\n            : currentstockprice[\n                currentstockprice.findIndex(\n                  (CRItem) => CRItem.sym === item.MaCK\n                )\n              ]?.lastPrice}\n        </div>\n        <div className=\"Amount\">\n          {item.Amount.toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            currency: \"USD\",\n          })}\n        </div>\n        <div className=\"lailo\">\n          {item.IsSold\n            ? item.Gain.toLocaleString(\"en-US\", {\n                style: \"decimal\",\n                currency: \"USD\",\n              })\n            : // ExpectedInterest(\n              //   item.BoughtPrice,\n              //   item.SoldPrice,\n              //   item.Amount\n              // )[0].toLocaleString(\"en-US\", {\n              //   style: \"decimal\",\n              //   currency: \"USD\",\n              // })\n              ExpectedInterest(\n                item.BoughtPrice,\n                currentstockprice[\n                  currentstockprice.findIndex(\n                    (CRItem) => CRItem.sym === item.MaCK\n                  )\n                ]?.lastPrice,\n                item.Amount\n              )[0].toLocaleString(\"en-US\", {\n                style: \"decimal\",\n                currency: \"USD\",\n              })}\n        </div>\n        <div className=\"tyle\">\n          {item.IsSold\n            ? item.Percent.toLocaleString(\"en-US\", {\n                style: \"decimal\",\n                currency: \"USD\",\n              })\n            : ExpectedInterest(\n                item.BoughtPrice,\n                currentstockprice[\n                  currentstockprice.findIndex(\n                    (CRItem) => CRItem.sym === item.MaCK\n                  )\n                ]?.lastPrice,\n                item.Amount\n              )[1].toLocaleString(\"en-US\", {\n                style: \"decimal\",\n                currency: \"USD\",\n              })}\n        </div>\n        {/* <div>\n          {ExpectedInterest(item.BoughtPrice, item.SoldPrice, item.Amount)[0]}\n        </div> */}\n        <div className=\"sellbutton\">\n          {item.IsSold ? \"\" : <FormDialog stockitem={item} />}\n        </div>\n      </div>\n      // console.log(random(5)),\n    ));\n\n  return (\n    <div className=\"buysell\">\n      <div className=\"addstockform\">\n        <form>\n          <div className=\"stockadd\">\n            <div>\n              <TextField\n                id=\"StockCodeID\"\n                label=\"Stock Code\"\n                style={{ marginTop: 5 }}\n                placeholder=\"0\"\n                // margin=\"dense\"\n                variant=\"outlined\"\n                size=\"small\"\n                // value={stockrecentbuy.MaCK}\n                onChange={(e) => {\n                  // stockrecentbuy.MaCK = e.target.value.toUpperCase();\n                  // e.target.value = stockrecentbuy.MaCK;\n                  // console.log(stockrecentbuy);\n                  e.target.value = e.target.value.toUpperCase();\n                  // console.log(document.getElementById(\"StockCodeID\").value);\n                }}\n              />\n            </div>\n            <div>\n              <TextField\n                id=\"StockAmount\"\n                label=\"Stock Amount\"\n                style={{ marginTop: 5 }}\n                placeholder=\"0\"\n                // margin=\"normal\"\n                variant=\"outlined\"\n                size=\"small\"\n                // value={stockrecentbuy.Amount}\n                onChange={(e) => {\n                  // stockrecentbuy.Amount = parseInt(e.target.value);\n                  // console.log(stockrecentbuy);\n                  // console.log(document.getElementById(\"StockAmount\").value);\n                }}\n              />\n            </div>\n            <div>\n              <TextField\n                id=\"BuyPrice\"\n                label=\"Buy Price\"\n                style={{ marginTop: 5 }}\n                placeholder=\"0\"\n                // margin=\"normal\"\n                size=\"small\"\n                // InputLabelProps={{\n                //   shrink: true,\n                // }}\n                variant=\"outlined\"\n                // value={stockrecentbuy.BoughtPrice}\n                onChange={(e) => {\n                  // stockrecentbuy.BoughtPrice = parseFloat(e.target.value);\n                  // console.log(stockrecentbuy);\n                  // console.log(document.getElementById(\"BuyPrice\").value);\n                }}\n              />\n            </div>\n            {/* <input\n              // value=\"\"\n              onChange={(e) => {\n                stockrecentbuy.MaCK = e.target.value.toUpperCase();\n                e.target.value = stockrecentbuy.MaCK;\n                console.log(stockrecentbuy);\n              }}\n              className=\"profit__Input\"\n              placeholder={\"0\"}\n            /> */}\n          </div>\n          <Button\n            variant=\"outlined\"\n            style={{ marginTop: 5, fontSize: \"12px\" }}\n            size=\"small\"\n            onClick={addstockclick}\n          >\n            Add Stock\n          </Button>\n          {/* <button className=\"addstock\" onClick={addstockclick}>\n            Add Stock\n          </button> */}\n        </form>\n      </div>\n      <div className=\"buysell__title\">\n        <h2>Bought Stocks</h2>\n        {ShowBuyStock(buystocks)}\n      </div>\n      <div className=\"total\">\n        <div className=\"totalitemleft\">\n          {expectTotal.toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            currency: \"USD\",\n          })}\n        </div>\n        <div className=\"totalitemright\">\n          {BuyTotal.toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            currency: \"USD\",\n          })}\n        </div>\n        <div className=\"totalpercent\">\n          {((expectTotal * 100) / BuyTotal).toFixed(2) + \"%\"}\n        </div>\n      </div>\n\n      <div className=\"buysell__title\">\n        <div className=\"showbought\">\n          <h2>Sold Stocks</h2>\n          <div className=\"showlable\">\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={showbought}\n                  onChange={showboughtClick}\n                  // name=\"checkedA\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  color=\"primary\"\n                />\n              }\n              // label=\"Show\"\n            />\n          </div>\n          {/* <div className=\"minusstock1\" onClick={showboughtClick}></div> */}\n        </div>\n\n        {showbought ? ShowBuyStock(sellstocks) : null}\n        <div className=\"total\">\n          {soldTotal.toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            currency: \"USD\",\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BuySell;\n","import logo from './logo.svg';\nimport './App.css';\nimport Realtime from \"./Components/Realtime\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport BuySell from \"./Components/BuySell\"\n\n//https://bgapidatafeed.vps.com.vn/getliststockdata/DXG,VGT,TCM\n//wss://bgdatafeed.vps.com.vn/socket.io\n//var socketLink = 'https://bgdatafeed.vps.com.vn/';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className=\"app\">\n          <Switch>\n            <Route path=\"/StockManager\">{<Realtime />}</Route>\n            <Route path=\"/Utils\">{<Realtime />}</Route>\n            <Route path=\"/HistoryTransactions\">{<Realtime />}</Route>\n            <Route path=\"/\">\n              <Realtime />\n              <BuySell />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\n  basket: [\"hungtd\", \"tdhung\"],\n  user: null,\n  currentstockprice: [],\n  // hoseindex: [],\n};\n\n// Selector\nexport const getBasketTotal = (basket) =>\n  basket?.reduce((Gain, item) => item.price + Gain, 0);\n\nconst reducer = (state, action) => {\n  // console.log(action);\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return {\n        ...state,\n        currentstockprice: [...state.currentstockprice, action.item],\n      };\n    // console.log(currentstockprice);\n    case \"UPDATE_TO_CURRENTSTOCKPRICE\":\n      const index = state.currentstockprice.findIndex(\n        (currentstockpriceItem) => currentstockpriceItem.sym === action.item.sym\n      );\n      let newcurrentstockprice = [...state.currentstockprice];\n\n      if (index >= 0) {\n        // newBasket.splice(index, 1);\n        // console.warn(newcurrentstockprice[index].lastPrice);\n        newcurrentstockprice[index].lastPrice = action.item.lastPrice;\n        // console.warn(newcurrentstockprice[index].mat);\n      } else {\n        //khong co can add them\n        newcurrentstockprice = [...state.currentstockprice, action.item];\n      }\n\n      return {\n        ...state,\n        currentstockprice: newcurrentstockprice,\n      };\n\n    // case \"SET_STOCK_INDEX\":\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <StateProvider initialState={initialState} reducer={reducer}>\n            <App />\n        </StateProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}